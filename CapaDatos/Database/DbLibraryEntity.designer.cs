#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaDatos.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Farmacia")]
	public partial class DbLibraryEntityDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertEmpleado(Empleado instance);
    partial void UpdateEmpleado(Empleado instance);
    partial void DeleteEmpleado(Empleado instance);
    partial void InsertFactura(Factura instance);
    partial void UpdateFactura(Factura instance);
    partial void DeleteFactura(Factura instance);
    partial void InsertFarmaceutico(Farmaceutico instance);
    partial void UpdateFarmaceutico(Farmaceutico instance);
    partial void DeleteFarmaceutico(Farmaceutico instance);
    partial void InsertFarmacia(Farmacia instance);
    partial void UpdateFarmacia(Farmacia instance);
    partial void DeleteFarmacia(Farmacia instance);
    partial void InsertTipo_Farmaceutico(Tipo_Farmaceutico instance);
    partial void UpdateTipo_Farmaceutico(Tipo_Farmaceutico instance);
    partial void DeleteTipo_Farmaceutico(Tipo_Farmaceutico instance);
    #endregion
		
		public DbLibraryEntityDataContext() : 
				base(global::CapaDatos.Properties.Settings.Default.FarmaciaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DbLibraryEntityDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbLibraryEntityDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbLibraryEntityDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbLibraryEntityDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cliente> Clientes
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Empleado> Empleados
		{
			get
			{
				return this.GetTable<Empleado>();
			}
		}
		
		public System.Data.Linq.Table<Factura> Facturas
		{
			get
			{
				return this.GetTable<Factura>();
			}
		}
		
		public System.Data.Linq.Table<Farmaceutico> Farmaceuticos
		{
			get
			{
				return this.GetTable<Farmaceutico>();
			}
		}
		
		public System.Data.Linq.Table<Farmacia> Farmacias
		{
			get
			{
				return this.GetTable<Farmacia>();
			}
		}
		
		public System.Data.Linq.Table<Tipo_Farmaceutico> Tipo_Farmaceuticos
		{
			get
			{
				return this.GetTable<Tipo_Farmaceutico>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDcliente;
		
		private string _DNI;
		
		private string _Nombre;
		
		private System.Nullable<int> _Edad;
		
		private EntitySet<Factura> _Facturas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDclienteChanging(int value);
    partial void OnIDclienteChanged();
    partial void OnDNIChanging(string value);
    partial void OnDNIChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnEdadChanging(System.Nullable<int> value);
    partial void OnEdadChanged();
    #endregion
		
		public Cliente()
		{
			this._Facturas = new EntitySet<Factura>(new Action<Factura>(this.attach_Facturas), new Action<Factura>(this.detach_Facturas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDcliente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDcliente
		{
			get
			{
				return this._IDcliente;
			}
			set
			{
				if ((this._IDcliente != value))
				{
					this.OnIDclienteChanging(value);
					this.SendPropertyChanging();
					this._IDcliente = value;
					this.SendPropertyChanged("IDcliente");
					this.OnIDclienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNI", DbType="VarChar(255)")]
		public string DNI
		{
			get
			{
				return this._DNI;
			}
			set
			{
				if ((this._DNI != value))
				{
					this.OnDNIChanging(value);
					this.SendPropertyChanging();
					this._DNI = value;
					this.SendPropertyChanged("DNI");
					this.OnDNIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(255)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edad", DbType="Int")]
		public System.Nullable<int> Edad
		{
			get
			{
				return this._Edad;
			}
			set
			{
				if ((this._Edad != value))
				{
					this.OnEdadChanging(value);
					this.SendPropertyChanging();
					this._Edad = value;
					this.SendPropertyChanged("Edad");
					this.OnEdadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Factura", Storage="_Facturas", ThisKey="IDcliente", OtherKey="IDcliente")]
		public EntitySet<Factura> Facturas
		{
			get
			{
				return this._Facturas;
			}
			set
			{
				this._Facturas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_user;
		
		private string _Usuario;
		
		private string _Clave;
		
		private int _CodNivel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_userChanging(int value);
    partial void OnId_userChanged();
    partial void OnUsuarioChanging(string value);
    partial void OnUsuarioChanged();
    partial void OnClaveChanging(string value);
    partial void OnClaveChanged();
    partial void OnCodNivelChanging(int value);
    partial void OnCodNivelChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_user", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_user
		{
			get
			{
				return this._Id_user;
			}
			set
			{
				if ((this._Id_user != value))
				{
					this.OnId_userChanging(value);
					this.SendPropertyChanging();
					this._Id_user = value;
					this.SendPropertyChanged("Id_user");
					this.OnId_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clave", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Clave
		{
			get
			{
				return this._Clave;
			}
			set
			{
				if ((this._Clave != value))
				{
					this.OnClaveChanging(value);
					this.SendPropertyChanging();
					this._Clave = value;
					this.SendPropertyChanged("Clave");
					this.OnClaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodNivel", DbType="Int NOT NULL")]
		public int CodNivel
		{
			get
			{
				return this._CodNivel;
			}
			set
			{
				if ((this._CodNivel != value))
				{
					this.OnCodNivelChanging(value);
					this.SendPropertyChanging();
					this._CodNivel = value;
					this.SendPropertyChanged("CodNivel");
					this.OnCodNivelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empleado")]
	public partial class Empleado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDempleado;
		
		private string _DNI;
		
		private string _Nombre;
		
		private int _IDfarmacia;
		
		private EntitySet<Factura> _Facturas;
		
		private EntityRef<Farmacia> _Farmacia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDempleadoChanging(int value);
    partial void OnIDempleadoChanged();
    partial void OnDNIChanging(string value);
    partial void OnDNIChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnIDfarmaciaChanging(int value);
    partial void OnIDfarmaciaChanged();
    #endregion
		
		public Empleado()
		{
			this._Facturas = new EntitySet<Factura>(new Action<Factura>(this.attach_Facturas), new Action<Factura>(this.detach_Facturas));
			this._Farmacia = default(EntityRef<Farmacia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDempleado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDempleado
		{
			get
			{
				return this._IDempleado;
			}
			set
			{
				if ((this._IDempleado != value))
				{
					this.OnIDempleadoChanging(value);
					this.SendPropertyChanging();
					this._IDempleado = value;
					this.SendPropertyChanged("IDempleado");
					this.OnIDempleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNI", DbType="VarChar(255)")]
		public string DNI
		{
			get
			{
				return this._DNI;
			}
			set
			{
				if ((this._DNI != value))
				{
					this.OnDNIChanging(value);
					this.SendPropertyChanging();
					this._DNI = value;
					this.SendPropertyChanged("DNI");
					this.OnDNIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(255)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDfarmacia", DbType="Int NOT NULL")]
		public int IDfarmacia
		{
			get
			{
				return this._IDfarmacia;
			}
			set
			{
				if ((this._IDfarmacia != value))
				{
					if (this._Farmacia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDfarmaciaChanging(value);
					this.SendPropertyChanging();
					this._IDfarmacia = value;
					this.SendPropertyChanged("IDfarmacia");
					this.OnIDfarmaciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Factura", Storage="_Facturas", ThisKey="IDempleado", OtherKey="IDempleado")]
		public EntitySet<Factura> Facturas
		{
			get
			{
				return this._Facturas;
			}
			set
			{
				this._Facturas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Farmacia_Empleado", Storage="_Farmacia", ThisKey="IDfarmacia", OtherKey="IDfarmacia", IsForeignKey=true)]
		public Farmacia Farmacia
		{
			get
			{
				return this._Farmacia.Entity;
			}
			set
			{
				Farmacia previousValue = this._Farmacia.Entity;
				if (((previousValue != value) 
							|| (this._Farmacia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Farmacia.Entity = null;
						previousValue.Empleados.Remove(this);
					}
					this._Farmacia.Entity = value;
					if ((value != null))
					{
						value.Empleados.Add(this);
						this._IDfarmacia = value.IDfarmacia;
					}
					else
					{
						this._IDfarmacia = default(int);
					}
					this.SendPropertyChanged("Farmacia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = this;
		}
		
		private void detach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Factura")]
	public partial class Factura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDfactura;
		
		private string _CodeFactura;
		
		private System.Nullable<int> _Monto;
		
		private int _IDcliente;
		
		private int _IDempleado;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Empleado> _Empleado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDfacturaChanging(int value);
    partial void OnIDfacturaChanged();
    partial void OnCodeFacturaChanging(string value);
    partial void OnCodeFacturaChanged();
    partial void OnMontoChanging(System.Nullable<int> value);
    partial void OnMontoChanged();
    partial void OnIDclienteChanging(int value);
    partial void OnIDclienteChanged();
    partial void OnIDempleadoChanging(int value);
    partial void OnIDempleadoChanged();
    #endregion
		
		public Factura()
		{
			this._Cliente = default(EntityRef<Cliente>);
			this._Empleado = default(EntityRef<Empleado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDfactura", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDfactura
		{
			get
			{
				return this._IDfactura;
			}
			set
			{
				if ((this._IDfactura != value))
				{
					this.OnIDfacturaChanging(value);
					this.SendPropertyChanging();
					this._IDfactura = value;
					this.SendPropertyChanged("IDfactura");
					this.OnIDfacturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeFactura", DbType="VarChar(255)")]
		public string CodeFactura
		{
			get
			{
				return this._CodeFactura;
			}
			set
			{
				if ((this._CodeFactura != value))
				{
					this.OnCodeFacturaChanging(value);
					this.SendPropertyChanging();
					this._CodeFactura = value;
					this.SendPropertyChanged("CodeFactura");
					this.OnCodeFacturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Monto", DbType="Int")]
		public System.Nullable<int> Monto
		{
			get
			{
				return this._Monto;
			}
			set
			{
				if ((this._Monto != value))
				{
					this.OnMontoChanging(value);
					this.SendPropertyChanging();
					this._Monto = value;
					this.SendPropertyChanged("Monto");
					this.OnMontoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDcliente", DbType="Int NOT NULL")]
		public int IDcliente
		{
			get
			{
				return this._IDcliente;
			}
			set
			{
				if ((this._IDcliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDclienteChanging(value);
					this.SendPropertyChanging();
					this._IDcliente = value;
					this.SendPropertyChanged("IDcliente");
					this.OnIDclienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDempleado", DbType="Int NOT NULL")]
		public int IDempleado
		{
			get
			{
				return this._IDempleado;
			}
			set
			{
				if ((this._IDempleado != value))
				{
					if (this._Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDempleadoChanging(value);
					this.SendPropertyChanging();
					this._IDempleado = value;
					this.SendPropertyChanged("IDempleado");
					this.OnIDempleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Factura", Storage="_Cliente", ThisKey="IDcliente", OtherKey="IDcliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Facturas.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Facturas.Add(this);
						this._IDcliente = value.IDcliente;
					}
					else
					{
						this._IDcliente = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Factura", Storage="_Empleado", ThisKey="IDempleado", OtherKey="IDempleado", IsForeignKey=true)]
		public Empleado Empleado
		{
			get
			{
				return this._Empleado.Entity;
			}
			set
			{
				Empleado previousValue = this._Empleado.Entity;
				if (((previousValue != value) 
							|| (this._Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleado.Entity = null;
						previousValue.Facturas.Remove(this);
					}
					this._Empleado.Entity = value;
					if ((value != null))
					{
						value.Facturas.Add(this);
						this._IDempleado = value.IDempleado;
					}
					else
					{
						this._IDempleado = default(int);
					}
					this.SendPropertyChanged("Empleado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Farmaceutico")]
	public partial class Farmaceutico : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDfarmaceutico;
		
		private string _Nombre;
		
		private System.Nullable<System.DateTime> _Fechavencimiento;
		
		private System.Nullable<int> _Cantidad;
		
		private System.Nullable<int> _Precio;
		
		private int _ID_TF;
		
		private int _IDfarmacia;
		
		private EntityRef<Farmacia> _Farmacia;
		
		private EntityRef<Tipo_Farmaceutico> _Tipo_Farmaceutico;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDfarmaceuticoChanging(int value);
    partial void OnIDfarmaceuticoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnFechavencimientoChanging(System.Nullable<System.DateTime> value);
    partial void OnFechavencimientoChanged();
    partial void OnCantidadChanging(System.Nullable<int> value);
    partial void OnCantidadChanged();
    partial void OnPrecioChanging(System.Nullable<int> value);
    partial void OnPrecioChanged();
    partial void OnID_TFChanging(int value);
    partial void OnID_TFChanged();
    partial void OnIDfarmaciaChanging(int value);
    partial void OnIDfarmaciaChanged();
    #endregion
		
		public Farmaceutico()
		{
			this._Farmacia = default(EntityRef<Farmacia>);
			this._Tipo_Farmaceutico = default(EntityRef<Tipo_Farmaceutico>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDfarmaceutico", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDfarmaceutico
		{
			get
			{
				return this._IDfarmaceutico;
			}
			set
			{
				if ((this._IDfarmaceutico != value))
				{
					this.OnIDfarmaceuticoChanging(value);
					this.SendPropertyChanging();
					this._IDfarmaceutico = value;
					this.SendPropertyChanged("IDfarmaceutico");
					this.OnIDfarmaceuticoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(255)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fechavencimiento", DbType="Date")]
		public System.Nullable<System.DateTime> Fechavencimiento
		{
			get
			{
				return this._Fechavencimiento;
			}
			set
			{
				if ((this._Fechavencimiento != value))
				{
					this.OnFechavencimientoChanging(value);
					this.SendPropertyChanging();
					this._Fechavencimiento = value;
					this.SendPropertyChanged("Fechavencimiento");
					this.OnFechavencimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int")]
		public System.Nullable<int> Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Int")]
		public System.Nullable<int> Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TF", DbType="Int NOT NULL")]
		public int ID_TF
		{
			get
			{
				return this._ID_TF;
			}
			set
			{
				if ((this._ID_TF != value))
				{
					if (this._Tipo_Farmaceutico.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TFChanging(value);
					this.SendPropertyChanging();
					this._ID_TF = value;
					this.SendPropertyChanged("ID_TF");
					this.OnID_TFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDfarmacia", DbType="Int NOT NULL")]
		public int IDfarmacia
		{
			get
			{
				return this._IDfarmacia;
			}
			set
			{
				if ((this._IDfarmacia != value))
				{
					if (this._Farmacia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDfarmaciaChanging(value);
					this.SendPropertyChanging();
					this._IDfarmacia = value;
					this.SendPropertyChanged("IDfarmacia");
					this.OnIDfarmaciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Farmacia_Farmaceutico", Storage="_Farmacia", ThisKey="IDfarmacia", OtherKey="IDfarmacia", IsForeignKey=true)]
		public Farmacia Farmacia
		{
			get
			{
				return this._Farmacia.Entity;
			}
			set
			{
				Farmacia previousValue = this._Farmacia.Entity;
				if (((previousValue != value) 
							|| (this._Farmacia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Farmacia.Entity = null;
						previousValue.Farmaceuticos.Remove(this);
					}
					this._Farmacia.Entity = value;
					if ((value != null))
					{
						value.Farmaceuticos.Add(this);
						this._IDfarmacia = value.IDfarmacia;
					}
					else
					{
						this._IDfarmacia = default(int);
					}
					this.SendPropertyChanged("Farmacia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Farmaceutico_Farmaceutico", Storage="_Tipo_Farmaceutico", ThisKey="ID_TF", OtherKey="ID_TF", IsForeignKey=true)]
		public Tipo_Farmaceutico Tipo_Farmaceutico
		{
			get
			{
				return this._Tipo_Farmaceutico.Entity;
			}
			set
			{
				Tipo_Farmaceutico previousValue = this._Tipo_Farmaceutico.Entity;
				if (((previousValue != value) 
							|| (this._Tipo_Farmaceutico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo_Farmaceutico.Entity = null;
						previousValue.Farmaceuticos.Remove(this);
					}
					this._Tipo_Farmaceutico.Entity = value;
					if ((value != null))
					{
						value.Farmaceuticos.Add(this);
						this._ID_TF = value.ID_TF;
					}
					else
					{
						this._ID_TF = default(int);
					}
					this.SendPropertyChanged("Tipo_Farmaceutico");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Farmacia")]
	public partial class Farmacia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDfarmacia;
		
		private string _Calle;
		
		private string _Sector;
		
		private string _Provincia;
		
		private string _Telefono;
		
		private string _Estado;
		
		private EntitySet<Empleado> _Empleados;
		
		private EntitySet<Farmaceutico> _Farmaceuticos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDfarmaciaChanging(int value);
    partial void OnIDfarmaciaChanged();
    partial void OnCalleChanging(string value);
    partial void OnCalleChanged();
    partial void OnSectorChanging(string value);
    partial void OnSectorChanged();
    partial void OnProvinciaChanging(string value);
    partial void OnProvinciaChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    #endregion
		
		public Farmacia()
		{
			this._Empleados = new EntitySet<Empleado>(new Action<Empleado>(this.attach_Empleados), new Action<Empleado>(this.detach_Empleados));
			this._Farmaceuticos = new EntitySet<Farmaceutico>(new Action<Farmaceutico>(this.attach_Farmaceuticos), new Action<Farmaceutico>(this.detach_Farmaceuticos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDfarmacia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDfarmacia
		{
			get
			{
				return this._IDfarmacia;
			}
			set
			{
				if ((this._IDfarmacia != value))
				{
					this.OnIDfarmaciaChanging(value);
					this.SendPropertyChanging();
					this._IDfarmacia = value;
					this.SendPropertyChanged("IDfarmacia");
					this.OnIDfarmaciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Calle", DbType="VarChar(255)")]
		public string Calle
		{
			get
			{
				return this._Calle;
			}
			set
			{
				if ((this._Calle != value))
				{
					this.OnCalleChanging(value);
					this.SendPropertyChanging();
					this._Calle = value;
					this.SendPropertyChanged("Calle");
					this.OnCalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sector", DbType="VarChar(255)")]
		public string Sector
		{
			get
			{
				return this._Sector;
			}
			set
			{
				if ((this._Sector != value))
				{
					this.OnSectorChanging(value);
					this.SendPropertyChanging();
					this._Sector = value;
					this.SendPropertyChanged("Sector");
					this.OnSectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provincia", DbType="VarChar(255)")]
		public string Provincia
		{
			get
			{
				return this._Provincia;
			}
			set
			{
				if ((this._Provincia != value))
				{
					this.OnProvinciaChanging(value);
					this.SendPropertyChanging();
					this._Provincia = value;
					this.SendPropertyChanged("Provincia");
					this.OnProvinciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(255)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(255)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Farmacia_Empleado", Storage="_Empleados", ThisKey="IDfarmacia", OtherKey="IDfarmacia")]
		public EntitySet<Empleado> Empleados
		{
			get
			{
				return this._Empleados;
			}
			set
			{
				this._Empleados.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Farmacia_Farmaceutico", Storage="_Farmaceuticos", ThisKey="IDfarmacia", OtherKey="IDfarmacia")]
		public EntitySet<Farmaceutico> Farmaceuticos
		{
			get
			{
				return this._Farmaceuticos;
			}
			set
			{
				this._Farmaceuticos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Empleados(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Farmacia = this;
		}
		
		private void detach_Empleados(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Farmacia = null;
		}
		
		private void attach_Farmaceuticos(Farmaceutico entity)
		{
			this.SendPropertyChanging();
			entity.Farmacia = this;
		}
		
		private void detach_Farmaceuticos(Farmaceutico entity)
		{
			this.SendPropertyChanging();
			entity.Farmacia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tipo_Farmaceutico")]
	public partial class Tipo_Farmaceutico : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TF;
		
		private string _Tipofarmaceutico;
		
		private string _Categoria;
		
		private EntitySet<Farmaceutico> _Farmaceuticos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TFChanging(int value);
    partial void OnID_TFChanged();
    partial void OnTipofarmaceuticoChanging(string value);
    partial void OnTipofarmaceuticoChanged();
    partial void OnCategoriaChanging(string value);
    partial void OnCategoriaChanged();
    #endregion
		
		public Tipo_Farmaceutico()
		{
			this._Farmaceuticos = new EntitySet<Farmaceutico>(new Action<Farmaceutico>(this.attach_Farmaceuticos), new Action<Farmaceutico>(this.detach_Farmaceuticos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TF", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_TF
		{
			get
			{
				return this._ID_TF;
			}
			set
			{
				if ((this._ID_TF != value))
				{
					this.OnID_TFChanging(value);
					this.SendPropertyChanging();
					this._ID_TF = value;
					this.SendPropertyChanged("ID_TF");
					this.OnID_TFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipofarmaceutico", DbType="VarChar(255)")]
		public string Tipofarmaceutico
		{
			get
			{
				return this._Tipofarmaceutico;
			}
			set
			{
				if ((this._Tipofarmaceutico != value))
				{
					this.OnTipofarmaceuticoChanging(value);
					this.SendPropertyChanging();
					this._Tipofarmaceutico = value;
					this.SendPropertyChanged("Tipofarmaceutico");
					this.OnTipofarmaceuticoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria", DbType="VarChar(255)")]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					this.OnCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Categoria = value;
					this.SendPropertyChanged("Categoria");
					this.OnCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Farmaceutico_Farmaceutico", Storage="_Farmaceuticos", ThisKey="ID_TF", OtherKey="ID_TF")]
		public EntitySet<Farmaceutico> Farmaceuticos
		{
			get
			{
				return this._Farmaceuticos;
			}
			set
			{
				this._Farmaceuticos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Farmaceuticos(Farmaceutico entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Farmaceutico = this;
		}
		
		private void detach_Farmaceuticos(Farmaceutico entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Farmaceutico = null;
		}
	}
}
#pragma warning restore 1591
